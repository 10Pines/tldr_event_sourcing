# This file is responsible for configuring your application
# and its dependencies with the aid of the Mix.Config module.
use Mix.Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.
config :tldr_event_sourcing, TldrEventSourcingWeb.Endpoint,
  http: [port: 4000],
  debug_errors: true,
  check_origin: false

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.

config :tldr_event_sourcing, TldrEventSourcingWeb.Auth.Guardian,
    issuer: "tldr_event_sourcing",
    secret_key: "Secret key. You can use `mix guardian.gen.secret` to get one"

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime


config :tldr_event_sourcing, TldrEventSourcing.Repo,
  database: "tldr_event_sourcing_repo",
  username: "postgres",
  password: "postgres",
  hostname: "localhost"

config :tldr_event_sourcing, :hash_braid,
  wallet_private_key: Map.get(System.get_env(), "WALLET_PRIVATE_KEY") || "NO_PRIVATE_KEY_SET",
  address: Map.get(System.get_env(), "WALLET_PUBLIC_ADDRESS") || "NO_ADDRESS_SET"

# This configuration is loaded before any dependency and is restricted
# to this project. If another project depends on this project, this
# file won't be loaded nor affect the parent project. For this reason,
# if you want to provide default values for your application for
# 3rd-party users, it should be done in your "mix.exs" file.

# You can configure your application as:
#
#     config :tldr_event_sourcing, key: :value
#
# and access this configuration in your application as:
#
#     Application.get_env(:tldr_event_sourcing, :key)
#
# You can also configure a 3rd-party app:
#
#     config :logger, level: :info
#

# It is also possible to import configuration files, relative to this
# directory. For example, you can emulate configuration per environment
# by uncommenting the line below and defining dev.exs, test.exs and such.
# Configuration from the imported file will override the ones defined
# here (which is why it is important to import them last).
#
#     import_config "#{Mix.env()}.exs"
